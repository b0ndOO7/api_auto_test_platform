<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.manage.modules.dao.TestCaseDao">
    <select id="getProjectHostListByUid"  resultType="com.main.manage.modules.entity.ProjectHostEntity">
        SELECT
            aph.id,
            ap.id as projectId,
            ap.project,
            aph.version,
            aph.domain,
            aph.ip
        FROM
            at_project ap
            LEFT JOIN at_project_host aph ON ap.id = aph.project_id
        WHERE 1=1
            AND ap.status = 0
            AND aph.status = 0
            <choose>
                <when test="uid != null">
                    AND ap.uid = #{uid}
                </when>
                <otherwise>
                    AND 1=2
                </otherwise>
            </choose>
        ORDER BY ap.project, aph.version;
    </select>

    <select id="checkProjectOwner"  resultType="String">
        SELECT uid
        FROM
        at_project ap
        WHERE 1=1
        <choose>
            <when test="projectId != null">
                AND ap.id = #{projectId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <select id="isExstsVersion"  resultType="String">
        SELECT t.version
        FROM
        at_project_host t JOIN at_project a ON t.project_id = a.id
        WHERE 1=1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="projectId != null">
                AND a.id = #{projectId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="version != null">
                AND t.version = #{version}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <insert id="insertHostIp">
      insert into at_project_host( project_id, version, domain, ip) values (#{projectId}, #{version}, #{domain} #{hostIp})
    </insert>


    <update id="updateHostIp">
        update at_project_host t
        set t.ip = #{hostIp},
             t.domain = #{domain}
        where t.id = #{hostId}
        and t.project_id = #{projectId}
    </update>


    <!--接口相关-->
    <select id="getAllApiByUid"  resultType="com.main.manage.modules.entity.TestApiEntity">
        SELECT t.id, t.project_id, t.module_id, t.version, t.api_name, t.protocol_type, t.method_type, t.domain, t.uri, t.status, a.project, b.module, a.update_time
        FROM at_project_api t LEFT JOIN at_project a ON t.project_id = a.id
        LEFT JOIN at_project_module b ON t.module_id = b.id
        WHERE 1=1
        AND t.status != -1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <if test="key_word != null">
            AND t.api_name LIKE CONCAT('%',#{key_word},'%')
        </if>
        <choose>
            <when test="moduleOrProjectList != null and moduleOrProjectList.size() > 0">
                AND ( t.module_id in
                <foreach item="id" collection="moduleOrProjectList" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                OR t.project_id in
                <foreach item="id" collection="moduleOrProjectList" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                )
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <if test="startRow != null">
            ORDER BY t.update_time desc limit #{startRow},#{pageSize}
        </if>
    </select>

    <select id="getTotalApiByUid"  resultType="Integer">
        SELECT count(1)
        FROM at_project_api t left join at_project a
        on t.project_id = a.id
        WHERE 1=1
        AND t.status != -1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <if test="key_word != null">
            AND t.api_name LIKE CONCAT('%',#{key_word},'%')
        </if>
        <choose>
            <when test="moduleOrProjectList != null and moduleOrProjectList.size() > 0">
                AND ( t.module_id in
                <foreach item="id" collection="moduleOrProjectList" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                OR t.project_id in
                <foreach item="id" collection="moduleOrProjectList" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                )
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <select id="getAllApiByPid"  resultType="com.main.manage.modules.entity.TestApiEntity">
        SELECT t.id, t.project_id, t.module_id, t.version, t.api_name, t.protocol_type, t.method_type, t.domain, t.uri, t.status, a.project, '' as module, a.update_time
        FROM at_project_api t JOIN at_project a ON t.project_id = a.id
        WHERE 1=1
        AND t.status != -1
        AND a.status != -1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="projectId != null">
                AND a.id = #{projectId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        ORDER BY t.module_id
    </select>

    <select id="isExstsTestApi" resultType="String">
        SELECT t.id
        FROM
        at_project_api t JOIN at_project a ON t.project_id = a.id
        WHERE 1=1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="projectId != null">
                AND a.id = #{projectId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="apiId != null">
                AND t.id = #{apiId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <insert id="insertTestApi">
        insert into at_project_api( project_id, module_id, api_name, protocol_type, method_type, domain, uri) values (#{projectId}, #{moduleId}, #{apiName}, #{apiProtoType}, #{apiMethodType}, #{domain}, #{uri})
    </insert>

    <update id="updateTestApi">
        update at_project_api t
        set t.method_type = #{apiMethodType}
            <if test="moduleId != null and moduleId != ''">
                ,t.module_id = #{moduleId}
            </if>
            <if test="apiProtoType != null and apiProtoType != ''">
                ,t.protocol_type = #{apiProtoType}
            </if>
            <if test="apiMethodType != null and apiMethodType != ''">
                ,t.method_type = #{apiMethodType}
            </if>
            <if test="domain != null and domain != ''">
                ,t.domain = #{domain}
            </if>
            <if test="uri != null and uri != ''">
                ,t.uri = #{uri}
            </if>
            <if test="apiName != null and apiName != ''">
                ,t.api_name = #{apiName}
            </if>
        where t.id = #{id}
        and t.project_id = #{projectId}
    </update>

    <update id="updateTestApiStatusByIds">
        update at_project_api t
        left join at_project a on t.project_id = a.id
        set t.status = #{status}
        where 1 = 1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        and t.id in
        <foreach item="id" collection="ids" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="getApiByUid" resultType="com.main.manage.modules.entity.TestApiEntity">
        SELECT t.id, t.project_id, t.api_name, t.protocol_type, t.method_type, t.domain, t.uri
        FROM
        at_project_api t JOIN at_project a ON t.project_id = a.id
        WHERE 1=1
        <choose>
            <when test="uid != null">
                AND a.uid = #{uid}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="apiId != null">
                AND t.id = #{apiId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <select id="getApiInfoByAid" resultType="com.main.manage.modules.entity.ApiInfoEntity">
        SELECT t.id, t.api_id, t.param_type, t.request_key, t.request_value, t.is_correlation, t.status
        FROM
        at_api_info t
        WHERE 1=1
        AND t.status = 0
        <choose>
            <when test="apiId != null">
                AND t.api_id = #{apiId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </select>

    <delete id="deleteApiInfoByAid">
        DELETE FROM at_api_info
        WHERE 1=1
        <choose>
            <when test="apiId != null">
                AND api_id = #{apiId}
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
    </delete>

    <insert id ="insertApiInfoBatch" parameterType="java.util.List">
        INSERT INTO at_api_info
        (api_id, param_type, request_key, request_value, is_correlation)
        values
        <foreach collection ="list" item="apiInfoEntity" index= "index" separator =",">
            (
            #{apiInfoEntity.api_id},
            #{apiInfoEntity.param_type},
            #{apiInfoEntity.request_key},
            #{apiInfoEntity.request_value},
            #{apiInfoEntity.is_correlation}
            )
        </foreach >
    </insert>

    <select id="findTestCaseByProjectId" resultType="com.main.manage.modules.entity.TestCaseEntity">
        select tc.id,
        tc.project_id,
        tc.case_name,
        tc.case_desc,
        pa.api_name,
        concat(case when pa.protocol_type='' then 'http'
                    when pa.protocol_type is null then 'http'
                    else lower(pa.protocol_type)
                    end,
                '://', pa.domain, pa.uri) url,
        tc.status,
        tar.index
        from at_testcase tc
        join at_project p on tc.project_id = p.id
        join at_testcase_api_relation tar on tc.id = tar.case_id
        join at_project_api pa on pa.id = tar.api_id
        where 1=1
        <choose>
            <when test="uid != null">
                and p.uid = #{uid}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
        <choose>
            <when test="projectId != null">
                and tc.project_id = #{projectId}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
        order by tc.update_time desc, tar.index
    </select>

    <select id="findTestCaseByPId" resultType="com.main.manage.modules.entity.TestCaseEntity">
        select tc.id,
        tc.project_id,
        tc.module_id,
        tc.case_name,
        tc.case_desc,
        tc.status
        from at_testcase tc
        join at_project p on tc.project_id = p.id
        where 1=1
        <choose>
            <when test="uid != null">
                and p.uid = #{uid}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
        <if test="moduleId != null and moduleId != ''">
            and tc.module_id = #{moduleId}
        </if>
        <choose>
            <when test="projectId != null">
                and tc.project_id = #{projectId}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
        order by tc.update_time desc
    </select>

    <insert id ="insertTestCase">
        INSERT INTO at_testcase
        (project_id, module_id, case_name, case_desc)
        values
       (#{projectId}, #{moduleId}, #{caseName}, #{caseDesc} )
    </insert>

    <update id="updateTestCase">
        update at_testcase t
        left join at_project a on t.project_id = a.id
        set t.case_name = #{caseName}
        <if test="projectId != null and projectId != ''">
            ,t.project_id = #{projectId}
        </if>
        <if test="moduleId != null and moduleId != ''">
            ,t.module_id = #{moduleId}
        </if>
        <if test="caseDesc != null and caseDesc != ''">
            ,t.case_desc = #{caseDesc}
        </if>
        <if test="status != null and status != ''">
            ,t.status = #{status}
        </if>
        where 1 = 1
        and t.id = #{caseId}
    </update>

    <select id="getTestCaseStep" resultType="com.main.manage.modules.entity.TestCaseStepEntity">
        select ar.index, ar.id as relationId, ar.case_id, ar.api_id, ap.api_name, ap.method_type, a.module_id,
                concat(case when ap.protocol_type='' then 'http'
                            when ap.protocol_type is null then 'http'
                            else lower(ap.protocol_type)
                            end,
                        '://', ap.domain, ap.uri) url,
                ar.status
        from at_testcase_api_relation ar
        join at_testcase a on a.id = ar.case_id
        join at_project_api ap on ar.api_id = ap.id
        where 1=1
        and ap.status != -1 and ar.status != -1 and a.status != -1
        <choose>
            <when test="caseId != null">
                and ar.case_id = #{caseId}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
        order by ar.index
    </select>


 </mapper>
